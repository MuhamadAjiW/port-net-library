AR=@AR@
CC=@CC@
CXX=@CXX@
ifneq ($(OS),Windows_NT)
OS := $(shell uname)
endif
ifeq ($(OS),Darwin)
CC=clang -fno-color-diagnostics
endif
BUILD_MINGW=@BUILD_MINGW@
BUILD_MINGW_X64=@BUILD_MINGW_X64@
DISABLE_NPCAP=@DISABLE_NPCAP@
EXE_SUFFIX=@EXE_SUFFIX@
SRCHOME=../src
ifneq ($(OS),Windows_NT)
CFLAGS+=-fPIC -DPIC
endif
CFLAGS+=-I$(SRCHOME)/include @NDPI_CFLAGS@ @PCAP_INC@ @GPROF_CFLAGS@
LDFLAGS+=@NDPI_LDFLAGS@
LIBNDPI=$(SRCHOME)/lib/libndpi.a
LIBS=$(LIBNDPI) @PCAP_LIB@ @ADDITIONAL_LIBS@ @LIBS@ @GPROF_LIBS@
LIB_HEADERS := $(shell find lib -name '*.h')
HEADERS=$(SRCHOME)/include/ndpi_api.h $(LIB_HEADERS) \
        $(SRCHOME)/include/ndpi_typedefs.h $(SRCHOME)/include/ndpi_protocol_ids.h
PREFIX?=@prefix@

ifneq ($(BUILD_MINGW),)

ifeq ($(DISABLE_NPCAP),0)
CFLAGS+=-I@srcdir@/../windows/WpdPack/Include -I@srcdir@/../windows/WpdPack/Include/pcap
else
CFLAGS+=-DDISABLE_NPCAP
endif

ifeq ($(DISABLE_NPCAP),0)

ifneq ($(BUILD_MINGW_X64),)
LIBS+=@srcdir@/../windows/WpdPack/Lib/x64/wpcap.lib
else
LIBS+=@srcdir@/../windows/WpdPack/Lib/wpcap.lib
endif

endif

LIBS+=-Wl,-Bstatic -lpthread -Wl,-Bdynamic
else
LIBS+=-pthread
endif

CFLAGS+=-pthread -DDEPLOY_BUILD
CHECK_CFLAGS:=$(CFLAGS) -DCHECK_BUILD

all: ndpiReader$(EXE_SUFFIX) @DPDK_TARGET@

EXECUTABLE_SOURCES := ndpiReader.c ndpiSimpleIntegration.c
COMMON_SOURCES := $(filter-out $(EXECUTABLE_SOURCES),$(wildcard *.c ))
INTERNAL_SOURCES := $(shell find $(lib) -name '*.c')
LIB_DIR := $(shell find lib -type d)
LIB_SRC := $(shell find lib -name '*.c')
LIB_OBJ := $(patsubst lib/%.c, bin/lib/%.o, $(LIB_SRC))

lib-clean:
	@rm -rf bin/*

lib-dir: 
	@for dir in $(LIB_DIR); do \
		if [ ! -d bin/$$dir ]; then mkdir -p bin/$$dir; fi \
	done

bin/%.o: %.c
	@$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

libndpiReader.a: $(COMMON_SOURCES:%.c=%.o) $(LIBNDPI)
	$(AR) rsv libndpiReader.a $(COMMON_SOURCES:%.c=%.o)

ndpiReader$(EXE_SUFFIX): lib-dir $(LIB_OBJ) libndpiReader.a $(LIBNDPI) ndpiReader.o
	$(CC) $(CFLAGS) $(LDFLAGS) ndpiReader.o libndpiReader.a $(LIB_OBJ) $(LIBS) -o $@
	strip "ndpiReader$(EXE_SUFFIX)"

ndpiSimpleIntegration$(EXE_SUFFIX): ndpiSimpleIntegration.o
	$(CC) $(CFLAGS) $(LDFLAGS) $< $(LIBS) -o $@

%.o: %.c $(HEADERS) Makefile
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

install: ndpiReader$(EXE_SUFFIX)
	mkdir -p $(DESTDIR)$(PREFIX)/bin/
	mkdir -p $(DESTDIR)$(PREFIX)/share/ndpi
	cp ndpiReader$(EXE_SUFFIX) $(DESTDIR)$(PREFIX)/bin/
	cp protos.txt $(DESTDIR)$(PREFIX)/share/ndpi/ndpiProtos.txt
	cp mining_hosts.txt $(DESTDIR)$(PREFIX)/share/ndpi/ndpiCustomCategory.txt
	[ -f ndpiSimpleIntegration$(EXE_SUFFIX) ] && cp ndpiSimpleIntegration$(EXE_SUFFIX) $(DESTDIR)$(PREFIX)/bin/ndpiSimpleIntegration$(EXE_SUFFIX) || true
	[ -f build/app/ndpiReader.dpdk ] && cp build/app/ndpiReader.dpdk $(DESTDIR)$(PREFIX)/bin/ || true
	[ -f ndpiReader.dpdk ] && cp ndpiReader.dpdk $(DESTDIR)$(PREFIX)/bin/ || true

dpdk:
	$(MAKE) -f Makefile.dpdk

check: CFLAGS=$(CHECK_CFLAGS)
check: ndpiReader$(EXE_SUFFIX)
	true # nothing to do here

cppcheck:
	 cppcheck --template='{file}:{line}:{severity}:{message}' --quiet --enable=all --force -I$(SRCHOME)/include *.c

clean: lib-clean
	/bin/rm -f *.o ndpiReader ndpiSimpleIntegration ndpiReader$(EXE_SUFFIX) ndpiSimpleIntegration$(EXE_SUFFIX) ndpiReader.dpdk libndpiReader.a
	/bin/rm -f .*.dpdk.cmd .*.o.cmd *.dpdk.map .*.o.d
	/bin/rm -f _install _postbuild _postinstall _preinstall
	/bin/rm -rf build

distdir:
	cp README.DPDK '$(distdir)/'
	find . -maxdepth 1 -type f -name '*.c' \
		-o -name '*.h' \
		-o -name '*.py' \
		-o -name '*.txt' \
		-o -name '*.csv' | xargs -I'{}' cp '{}' '$(distdir)/{}'

distclean: clean
	/bin/rm -f Makefile.dpdk
	/bin/rm -f Makefile
